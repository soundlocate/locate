CMAKE_MINIMUM_REQUIRED (VERSION 2.6.2)
PROJECT (soundLocate)
SET (APPLICATION_NAME "soundLocate")
SET (APPLICATION_CODENAME "${PROJECT_NAME}")
SET (APPLICATION_COPYRIGHT_YEARS "2016")
SET (APPLICATION_VERSION_MAJOR 1)
SET (APPLICATION_VERSION_MINOR 0)
SET (APPLICATION_VERSION_PATCH 1)
SET (APPLICATION_VERSION_TYPE ALPHA)
SET (APPLICATION_VERSION_STRING "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}.${APPLICATION_VERSION_PATCH}-${APPLICATION_VERSION_TYPE}")
SET (APPLICATION_VENDOR_ID "de.sfn_kassel")
SET (APPLICATION_VENDOR_NAME "Sch√ºlerforschungszentrum Nordhessen")
SET (APPLICATION_VENDOR_URL "www.sfn-kassel.de")
SET (APPLICATION_VENDOR_EMAIL "schallortung@gmail.com")
SET (APPLICATION_ID "${APPLICATION_VENDOR_ID}.${PROJECT_NAME}")

SET (CMAKE_VERBOSE_MAKEFILE 0)

SET (MAINFOLDER ${PROJECT_SOURCE_DIR})
SET (EXECUTABLE_OUTPUT_PATH "${MAINFOLDER}/bin")

LIST (APPEND CMAKE_PREFIX_PATH "${MAINFOLDER}")

INCLUDE_DIRECTORIES("${MAINFOLDER}/include")

FILE (GLOB_RECURSE CONFIGINPUTS1 include/*.in.h.cmake)
FILE (GLOB_RECURSE CONFIGINPUTS2 include/*.h.in.cmake)
FILE (GLOB_RECURSE CONFIGINPUTS3 src/*.in.h.cmake)
FILE (GLOB_RECURSE CONFIGINPUTS4 src/*.h.in.cmake)

LIST (APPEND CONFIGINPUTS "${CONFIGINPUTS1}")
LIST (APPEND CONFIGINPUTS "${CONFIGINPUTS2}")
LIST (APPEND CONFIGINPUTS "${CONFIGINPUTS3}")
LIST (APPEND CONFIGINPUTS "${CONFIGINPUTS4}")

FOREACH (CONFIGINPUT ${CONFIGINPUTS})
  STRING (REPLACE ".in.h.cmake" ".h" CONFIGOUTPUT1 "${CONFIGINPUT}")
  STRING (REPLACE ".h.in.cmake" ".h" CONFIGOUTPUT2 "${CONFIGOUTPUT1}")
  CONFIGURE_FILE ("${CONFIGINPUT}" "${CONFIGOUTPUT2}")
ENDFOREACH (CONFIGINPUT ${CONFIGINPUTS})

FIND_PACKAGE(SFML COMPONENTS system network REQUIRED)
INCLUDE_DIRECTORIES(SFML_INCLUDE_DIR)

SET (MKL_STATIC TRUE)
FIND_PACKAGE(MKL REQUIRED)
INCLUDE_DIRECTORIES(MKL_INCLUDE_DIR)

SET (CMAKE_AUTOMOC ON)
#FIND_PACKAGE(Qt5WebSockets REQUIRED)
FIND_PACKAGE (Qt5 COMPONENTS WebSockets Widgets)

INCLUDE_DIRECTORIES (${Qt5WebSockets_INCLUDE_DIRS})

ADD_SUBDIRECTORY(src)
IF (EXISTS "${MAINFOLDER}/include/${PROJECT_NAME}" AND IS_DIRECTORY "${MAINFOLDER}/include/${PROJECT_NAME}")
  INSTALL(DIRECTORY "${MAINFOLDER}/include/${PROJECT_NAME}" DESTINATION "include")
ENDIF (EXISTS "${MAINFOLDER}/include/${PROJECT_NAME}" AND IS_DIRECTORY "${MAINFOLDER}/include/${PROJECT_NAME}")

